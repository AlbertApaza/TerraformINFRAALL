

provider "aws" {
  region = "us-east-1"
}

# Crear una VPC
resource "aws_vpc" "vpc_negocios" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_support   = true
  enable_dns_hostnames = true
  tags = {
    Name = "vpc_negocios"
  }
}

# Crear subredes en diferentes zonas de disponibilidad
resource "aws_subnet" "subnets" {
  count                   = 6
  vpc_id                  = aws_vpc.vpc_negocios.id
  cidr_block              = "10.0.${count.index + 1}.0/24"
  availability_zone       = element(["us-east-1a", "us-east-1b", "us-east-1c", "us-east-1d", "us-east-1e", "us-east-1f"], count.index)
  map_public_ip_on_launch = true
  tags = {
    Name = "subnet-${count.index + 1}"
  }
}

# Crear un Internet Gateway
resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.vpc_negocios.id
  tags = {
    Name = "igw_negocios"
  }
}

# Crear tabla de enrutamiento y asociarla al IGW
resource "aws_route_table" "route_table" {
  vpc_id = aws_vpc.vpc_negocios.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }
  tags = {
    Name = "route_table_negocios"
  }
}

# Asociar tabla de enrutamiento a las subredes
resource "aws_route_table_association" "route_associations" {
  count          = 6
  subnet_id      = aws_subnet.subnets[count.index].id
  route_table_id = aws_route_table.route_table.id
}

resource "aws_s3_bucket" "s3_bucket" {
  bucket = "netuptinteligencianegocios"
  tags = {
    Name = "S3 Bucket Inteligencia Negocios"
  }
}

resource "aws_s3_bucket_policy" "s3_bucket_policy" {
  bucket = aws_s3_bucket.s3_bucket.id

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Sid       = "PublicReadGetObject"
        Effect    = "Allow"
        Principal = "*"
        Action    = "s3:GetObject"
        Resource  = "${aws_s3_bucket.s3_bucket.arn}/*"
      }
    ]
  })
}
