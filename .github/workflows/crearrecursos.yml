name: AWS Glue and Terraform Setup

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # Si usas MFA o sesiones temporales
        aws-region: us-east-1

    - name: Checkout code
      uses: actions/checkout@v2  # Añadir este paso para descargar el código

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Install Python and Boto3
      run: |
        sudo apt-get install -y python3 python3-pip
        pip3 install boto3

    - name: Terraform Initialization
      run: |
        ls -la  # Para verificar la estructura de archivos
        cd infra 
        terraform init
    
    - name: Apply Terraform Configuration
      run: |
        cd infra 
        terraform apply --auto-approve
    
    - name: Copy Terraform State to Repository
      run: |
        echo "Copiando el archivo terraform.tfstate al repositorio local..."
        cp infra/terraform.tfstate infra/terraform.tfstate.backup || true  # Copia de seguridad opcional
        cp infra/terraform.tfstate ./  # Copia el estado al directorio raíz del repositorio
    
    - name: Commit and Push State File
      run: |
        echo "Confirmando y enviando terraform.tfstate al repositorio remoto..."
        git config --global user.name "AlbertApaza"
        git config --global user.email "aa2021071075@virtual.upt.pe"
        git add terraform.tfstate
        git commit -m "Actualizando terraform.tfstate después de apply"
        git push origin main  # Asegúrate de que el nombre de tu rama sea correcto


    - name: Run Python Script to interact with S3
      run: |
        python3 s3bucket.py
        
    - name: Start Glue Crawler
      run: |
        aws glue start-crawler --name netuptinteligencianegocios-crawler

        
    - name: Wait for Glue Table Creation
      run: |
        # Espera 5 minutos antes de proceder
        echo "Esperando 5 minutos para que el crawler termine de crear la tabla..."
        sleep 300
    
    - name: Show Specific Glue Table Details
      run: |
        echo "Verificando la tabla 'netuptinteligencianegocios' en la base de datos 'tb_redupt_database'..."
        aws glue get-table --database-name tb_redupt_database --name netuptinteligencianegocios --output json
    
    - name: Clean Up S3 Bucket
      run: |
        echo "Limpiando el bucket S3 'netuptinteligencianegocios' antes de destruir la infraestructura..."
        aws s3 rm s3://netuptinteligencianegocios --recursive
    
    - name: Destroy Terraform Infrastructure
      run: |
        cd infra
        terraform destroy --auto-approve
